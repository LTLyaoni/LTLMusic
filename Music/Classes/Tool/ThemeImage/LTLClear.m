//
//  LTLClear.m
//  音乐播放器
//
//  Created by 李泰良 on 16/12/16.
//  Copyright © 2016 LTL. All rights reserved.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

@import UIKit;
#import "LTLClear.h"



@implementation LTLClear


#pragma mark - Canvas Drawings

//! Page 1

+(void) drawClear
{
    [LTLClear drawClearWithFrame:CGRectMake(0, 0, 160, 160) resizing:LTLClearResizingBehaviorAspectFit];
}

+(void) drawClearWithFrame:(CGRect)frame resizing:(LTLClearResizingBehavior)resizing
{
    //! General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //! Resize To Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = LTLClearResizingBehaviorApply(resizing, CGRectMake(0, 0, 160, 160), frame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGSize resizedScale = CGSizeMake(resizedFrame.size.width / 160, resizedFrame.size.height / 160);
    CGContextScaleCTM(context, resizedScale.width, resizedScale.height);
    
    //! Rectangle
    UIBezierPath *rectangle = [UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, 138, 138) cornerRadius:26];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 11, 11);
    CGContextSaveGState(context);
    rectangle.lineWidth = 10;
    CGContextBeginPath(context);
    CGContextAddPath(context, rectangle.CGPath);
    CGContextEOClip(context);
    [[LTLThemeManager sharedManager].themeColor setStroke];
    [rectangle stroke];
    CGContextRestoreGState(context);
    CGContextRestoreGState(context);
    
    //! Page 1
    UIBezierPath *page2 = [UIBezierPath bezierPath];
    [page2 moveToPoint:CGPointMake(86.34, 25.01)];
    [page2 addCurveToPoint:CGPointMake(80.32, 31) controlPoint1:CGPointMake(86.34, 28.32) controlPoint2:CGPointMake(83.65, 31)];
    [page2 addLineToPoint:CGPointMake(11.68, 31)];
    [page2 addCurveToPoint:CGPointMake(5.66, 25.01) controlPoint1:CGPointMake(8.35, 31) controlPoint2:CGPointMake(5.66, 28.32)];
    [page2 addLineToPoint:CGPointMake(5.66, 24.31)];
    [page2 addCurveToPoint:CGPointMake(11.68, 18.32) controlPoint1:CGPointMake(5.66, 21) controlPoint2:CGPointMake(8.35, 18.32)];
    [page2 addLineToPoint:CGPointMake(80.32, 18.32)];
    [page2 addCurveToPoint:CGPointMake(86.34, 24.31) controlPoint1:CGPointMake(83.65, 18.32) controlPoint2:CGPointMake(86.34, 21)];
    [page2 addLineToPoint:CGPointMake(86.34, 25.01)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(75.02, 79.44)];
    [page2 addCurveToPoint:CGPointMake(66.07, 87.36) controlPoint1:CGPointMake(75.02, 87.14) controlPoint2:CGPointMake(74.02, 87.36)];
    [page2 addLineToPoint:CGPointMake(23.61, 87.36)];
    [page2 addCurveToPoint:CGPointMake(15.57, 79.44) controlPoint1:CGPointMake(15.38, 87.36) controlPoint2:CGPointMake(15.57, 86.85)];
    [page2 addLineToPoint:CGPointMake(15.57, 36.64)];
    [page2 addLineToPoint:CGPointMake(75.02, 36.64)];
    [page2 addLineToPoint:CGPointMake(75.02, 79.44)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(36.35, 5.64)];
    [page2 addLineToPoint:CGPointMake(53.33, 5.64)];
    [page2 addCurveToPoint:CGPointMake(62.23, 12.68) controlPoint1:CGPointMake(60.11, 5.64) controlPoint2:CGPointMake(61.96, 6.35)];
    [page2 addLineToPoint:CGPointMake(28.32, 12.68)];
    [page2 addCurveToPoint:CGPointMake(36.35, 5.64) controlPoint1:CGPointMake(28.42, 6.56) controlPoint2:CGPointMake(29.3, 5.64)];
    [page2 addLineToPoint:CGPointMake(36.35, 5.64)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(80.32, 12.68)];
    [page2 addLineToPoint:CGPointMake(67.89, 12.68)];
    [page2 addCurveToPoint:CGPointMake(53.33, 0) controlPoint1:CGPointMake(67.51, 4.1) controlPoint2:CGPointMake(64.31, 0)];
    [page2 addLineToPoint:CGPointMake(36.35, 0)];
    [page2 addCurveToPoint:CGPointMake(22.68, 12.68) controlPoint1:CGPointMake(26.2, 0) controlPoint2:CGPointMake(23.03, 3.25)];
    [page2 addLineToPoint:CGPointMake(11.68, 12.68)];
    [page2 addCurveToPoint:CGPointMake(0, 24.31) controlPoint1:CGPointMake(5.23, 12.68) controlPoint2:CGPointMake(0, 17.89)];
    [page2 addLineToPoint:CGPointMake(0, 25.01)];
    [page2 addCurveToPoint:CGPointMake(9.91, 36.49) controlPoint1:CGPointMake(0, 30.83) controlPoint2:CGPointMake(4.3, 35.64)];
    [page2 addLineToPoint:CGPointMake(9.91, 79.44)];
    [page2 addCurveToPoint:CGPointMake(23.61, 93) controlPoint1:CGPointMake(9.91, 91.12) controlPoint2:CGPointMake(13.41, 93)];
    [page2 addLineToPoint:CGPointMake(66.07, 93)];
    [page2 addCurveToPoint:CGPointMake(80.68, 79.44) controlPoint1:CGPointMake(77.07, 93) controlPoint2:CGPointMake(80.68, 90.21)];
    [page2 addLineToPoint:CGPointMake(80.68, 36.62)];
    [page2 addCurveToPoint:CGPointMake(92, 25.01) controlPoint1:CGPointMake(86.96, 36.43) controlPoint2:CGPointMake(92, 31.31)];
    [page2 addLineToPoint:CGPointMake(92, 24.31)];
    [page2 addCurveToPoint:CGPointMake(80.32, 12.68) controlPoint1:CGPointMake(92, 17.89) controlPoint2:CGPointMake(86.77, 12.68)];
    [page2 addLineToPoint:CGPointMake(80.32, 12.68)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(62.28, 78.91)];
    [page2 addCurveToPoint:CGPointMake(63.69, 77.5) controlPoint1:CGPointMake(63.06, 78.91) controlPoint2:CGPointMake(63.69, 78.28)];
    [page2 addLineToPoint:CGPointMake(63.69, 43.68)];
    [page2 addCurveToPoint:CGPointMake(62.28, 42.27) controlPoint1:CGPointMake(63.69, 42.9) controlPoint2:CGPointMake(63.06, 42.27)];
    [page2 addCurveToPoint:CGPointMake(60.86, 43.68) controlPoint1:CGPointMake(61.49, 42.27) controlPoint2:CGPointMake(60.86, 42.9)];
    [page2 addLineToPoint:CGPointMake(60.86, 77.5)];
    [page2 addCurveToPoint:CGPointMake(62.28, 78.91) controlPoint1:CGPointMake(60.86, 78.28) controlPoint2:CGPointMake(61.49, 78.91)];
    [page2 addLineToPoint:CGPointMake(62.28, 78.91)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(45.29, 78.91)];
    [page2 addCurveToPoint:CGPointMake(46.71, 77.5) controlPoint1:CGPointMake(46.08, 78.91) controlPoint2:CGPointMake(46.71, 78.28)];
    [page2 addLineToPoint:CGPointMake(46.71, 43.68)];
    [page2 addCurveToPoint:CGPointMake(45.29, 42.27) controlPoint1:CGPointMake(46.71, 42.9) controlPoint2:CGPointMake(46.08, 42.27)];
    [page2 addCurveToPoint:CGPointMake(43.88, 43.68) controlPoint1:CGPointMake(44.51, 42.27) controlPoint2:CGPointMake(43.88, 42.9)];
    [page2 addLineToPoint:CGPointMake(43.88, 77.5)];
    [page2 addCurveToPoint:CGPointMake(45.29, 78.91) controlPoint1:CGPointMake(43.88, 78.28) controlPoint2:CGPointMake(44.51, 78.91)];
    [page2 addLineToPoint:CGPointMake(45.29, 78.91)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(28.31, 69.05)];
    [page2 addCurveToPoint:CGPointMake(29.72, 67.64) controlPoint1:CGPointMake(29.09, 69.05) controlPoint2:CGPointMake(29.72, 68.41)];
    [page2 addLineToPoint:CGPointMake(29.72, 43.68)];
    [page2 addCurveToPoint:CGPointMake(28.31, 42.27) controlPoint1:CGPointMake(29.72, 42.9) controlPoint2:CGPointMake(29.09, 42.27)];
    [page2 addCurveToPoint:CGPointMake(26.89, 43.68) controlPoint1:CGPointMake(27.52, 42.27) controlPoint2:CGPointMake(26.89, 42.9)];
    [page2 addLineToPoint:CGPointMake(26.89, 67.64)];
    [page2 addCurveToPoint:CGPointMake(28.31, 69.05) controlPoint1:CGPointMake(26.89, 68.41) controlPoint2:CGPointMake(27.52, 69.05)];
    [page2 addLineToPoint:CGPointMake(28.31, 69.05)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(28.31, 78.91)];
    [page2 addCurveToPoint:CGPointMake(29.72, 77.5) controlPoint1:CGPointMake(29.09, 78.91) controlPoint2:CGPointMake(29.72, 78.28)];
    [page2 addLineToPoint:CGPointMake(29.72, 74.68)];
    [page2 addCurveToPoint:CGPointMake(28.31, 73.27) controlPoint1:CGPointMake(29.72, 73.9) controlPoint2:CGPointMake(29.09, 73.27)];
    [page2 addCurveToPoint:CGPointMake(26.89, 74.68) controlPoint1:CGPointMake(27.52, 73.27) controlPoint2:CGPointMake(26.89, 73.9)];
    [page2 addLineToPoint:CGPointMake(26.89, 77.5)];
    [page2 addCurveToPoint:CGPointMake(28.31, 78.91) controlPoint1:CGPointMake(26.89, 78.28) controlPoint2:CGPointMake(27.52, 78.91)];
    [page2 addLineToPoint:CGPointMake(28.31, 78.91)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(28.31, 78.91)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 37, 34);
    page2.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [page2 fill];
    CGContextRestoreGState(context);
    
    CGContextRestoreGState(context);
}


#pragma mark - Canvas Images

//! Page 1

+(UIImage *) imageOfClear
{
    static UIImage * image = nil;
    if (image != nil)
        return image;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(160, 160), NO, 0);
    [LTLClear drawClear];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}

+(UIImage *) imageOfClearWithSize:(CGSize)size resizing:(LTLClearResizingBehavior)resizing
{
    UIImage *image = nil;
    
    UIGraphicsBeginImageContextWithOptions(size, NO, 0);
    [LTLClear drawClearWithFrame:CGRectMake(0, 0, size.width, size.height) resizing:resizing];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}


#pragma mark - Resizing Behavior

CGRect LTLClearResizingBehaviorApply(LTLClearResizingBehavior behavior, CGRect rect, CGRect target)
{
    if (CGRectEqualToRect(rect, target) || CGRectEqualToRect(target, CGRectZero))
    {
        return rect;
    }
    
    CGSize scales = CGSizeZero;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);
    
    switch (behavior)
    {
        case LTLClearResizingBehaviorAspectFit:
        {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLClearResizingBehaviorAspectFill:
        {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLClearResizingBehaviorStretch:
            break;
        
        case LTLClearResizingBehaviorCenter:
        {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }
    
    CGRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}


@end
