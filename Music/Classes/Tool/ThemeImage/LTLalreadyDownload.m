//
//  LTLalreadyDownload.m
//  音乐播放器
//
//  Created by 李泰良 on 16/12/13.
//  Copyright © 2016 LTL. All rights reserved.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

@import UIKit;
#import "LTLalreadyDownload.h"



@implementation LTLalreadyDownload


#pragma mark - Canvas Drawings

//! Page 1

+(void) drawAlreadyDownload
{
    [LTLalreadyDownload drawAlreadyDownloadWithFrame:CGRectMake(0, 0, 40, 40) resizing:LTLalreadyDownloadResizingBehaviorAspectFit];
}

+(void) drawAlreadyDownloadWithFrame:(CGRect)frame resizing:(LTLalreadyDownloadResizingBehavior)resizing
{
    //! General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //! Resize To Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = LTLalreadyDownloadResizingBehaviorApply(resizing, CGRectMake(0, 0, 40, 40), frame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGSize resizedScale = CGSizeMake(resizedFrame.size.width / 40, resizedFrame.size.height / 40);
    CGContextScaleCTM(context, resizedScale.width, resizedScale.height);
    
    //! Page 1
    UIBezierPath *page2 = [UIBezierPath bezierPath];
    [page2 moveToPoint:CGPointMake(11.44, 22.89)];
    [page2 addCurveToPoint:CGPointMake(9.84, 22.22) controlPoint1:CGPointMake(10.84, 22.89) controlPoint2:CGPointMake(10.26, 22.65)];
    [page2 addLineToPoint:CGPointMake(0.66, 13.04)];
    [page2 addCurveToPoint:CGPointMake(0.66, 9.84) controlPoint1:CGPointMake(-0.22, 12.16) controlPoint2:CGPointMake(-0.22, 10.72)];
    [page2 addCurveToPoint:CGPointMake(3.87, 9.84) controlPoint1:CGPointMake(1.55, 8.95) controlPoint2:CGPointMake(2.98, 8.95)];
    [page2 addLineToPoint:CGPointMake(11.29, 17.26)];
    [page2 addLineToPoint:CGPointMake(24.99, 0.82)];
    [page2 addCurveToPoint:CGPointMake(28.18, 0.53) controlPoint1:CGPointMake(25.79, -0.15) controlPoint2:CGPointMake(27.22, -0.28)];
    [page2 addCurveToPoint:CGPointMake(28.47, 3.72) controlPoint1:CGPointMake(29.15, 1.33) controlPoint2:CGPointMake(29.28, 2.76)];
    [page2 addLineToPoint:CGPointMake(13.18, 22.07)];
    [page2 addCurveToPoint:CGPointMake(11.54, 22.88) controlPoint1:CGPointMake(12.77, 22.56) controlPoint2:CGPointMake(12.18, 22.85)];
    [page2 addCurveToPoint:CGPointMake(11.44, 22.89) controlPoint1:CGPointMake(11.51, 22.88) controlPoint2:CGPointMake(11.47, 22.89)];
    [page2 addLineToPoint:CGPointMake(11.44, 22.89)];
    [page2 closePath];
    [page2 moveToPoint:CGPointMake(11.44, 22.89)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 6, 8);
    page2.lineWidth = 3;
    [[LTLThemeManager sharedManager].themeColor setStroke];
    [page2 stroke];
    CGContextRestoreGState(context);
    
    CGContextRestoreGState(context);
}


#pragma mark - Canvas Images

//! Page 1

+(UIImage *) imageOfAlreadyDownload
{
    static UIImage * image = nil;
    if (image != nil)
        return image;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(40, 40), NO, 0);
    [LTLalreadyDownload drawAlreadyDownload];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}

+(UIImage *) imageOfAlreadyDownloadWithSize:(CGSize)size resizing:(LTLalreadyDownloadResizingBehavior)resizing
{
    UIImage *image = nil;
    
    UIGraphicsBeginImageContextWithOptions(size, NO, 0);
    [LTLalreadyDownload drawAlreadyDownloadWithFrame:CGRectMake(0, 0, size.width, size.height) resizing:resizing];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}


#pragma mark - Resizing Behavior

CGRect LTLalreadyDownloadResizingBehaviorApply(LTLalreadyDownloadResizingBehavior behavior, CGRect rect, CGRect target)
{
    if (CGRectEqualToRect(rect, target) || CGRectEqualToRect(target, CGRectZero))
    {
        return rect;
    }
    
    CGSize scales = CGSizeZero;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);
    
    switch (behavior)
    {
        case LTLalreadyDownloadResizingBehaviorAspectFit:
        {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLalreadyDownloadResizingBehaviorAspectFill:
        {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLalreadyDownloadResizingBehaviorStretch:
            break;
        
        case LTLalreadyDownloadResizingBehaviorCenter:
        {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }
    
    CGRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}


@end
