//
//  LTLDownloadMusic.m
//  音乐播放器
//
//  Created by 李泰良 on 16/12/16.
//  Copyright © 2016 LTL. All rights reserved.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

@import UIKit;
#import "LTLDownloadMusic.h"



@implementation LTLDownloadMusic


#pragma mark - Canvas Drawings

//! Page 1

+(void) drawDownloadMusic
{
    [LTLDownloadMusic drawDownloadMusicWithFrame:CGRectMake(0, 0, 160, 160) resizing:LTLDownloadMusicResizingBehaviorAspectFit];
}

+(void) drawDownloadMusicWithFrame:(CGRect)frame resizing:(LTLDownloadMusicResizingBehavior)resizing
{
    //! General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //! Resize To Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = LTLDownloadMusicResizingBehaviorApply(resizing, CGRectMake(0, 0, 160, 160), frame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGSize resizedScale = CGSizeMake(resizedFrame.size.width / 160, resizedFrame.size.height / 160);
    CGContextScaleCTM(context, resizedScale.width, resizedScale.height);
    
    //! Fill 1
    UIBezierPath *fill1 = [UIBezierPath bezierPath];
    [fill1 moveToPoint:CGPointMake(18.37, 4)];
    [fill1 addCurveToPoint:CGPointMake(13.79, 4.62) controlPoint1:CGPointMake(16.89, 4) controlPoint2:CGPointMake(15.34, 4.2)];
    [fill1 addCurveToPoint:CGPointMake(4.17, 15.06) controlPoint1:CGPointMake(7.51, 6.3) controlPoint2:CGPointMake(3.1, 11.09)];
    [fill1 addCurveToPoint:CGPointMake(8.62, 19.19) controlPoint1:CGPointMake(4.66, 16.89) controlPoint2:CGPointMake(6.24, 18.35)];
    [fill1 addCurveToPoint:CGPointMake(17.73, 19.3) controlPoint1:CGPointMake(11.27, 20.13) controlPoint2:CGPointMake(14.5, 20.16)];
    [fill1 addCurveToPoint:CGPointMake(27.35, 8.85) controlPoint1:CGPointMake(24.01, 17.62) controlPoint2:CGPointMake(28.42, 12.83)];
    [fill1 addCurveToPoint:CGPointMake(22.9, 4.73) controlPoint1:CGPointMake(26.86, 7.03) controlPoint2:CGPointMake(25.28, 5.57)];
    [fill1 addCurveToPoint:CGPointMake(18.37, 4) controlPoint1:CGPointMake(21.52, 4.24) controlPoint2:CGPointMake(19.98, 4)];
    [fill1 moveToPoint:CGPointMake(13.15, 23.92)];
    [fill1 addCurveToPoint:CGPointMake(7.29, 22.96) controlPoint1:CGPointMake(11.08, 23.92) controlPoint2:CGPointMake(9.09, 23.6)];
    [fill1 addCurveToPoint:CGPointMake(0.3, 16.1) controlPoint1:CGPointMake(3.62, 21.67) controlPoint2:CGPointMake(1.14, 19.23)];
    [fill1 addCurveToPoint:CGPointMake(12.76, 0.76) controlPoint1:CGPointMake(-1.38, 9.82) controlPoint2:CGPointMake(4.09, 3.08)];
    [fill1 addCurveToPoint:CGPointMake(24.23, 0.95) controlPoint1:CGPointMake(16.76, -0.32) controlPoint2:CGPointMake(20.83, -0.24)];
    [fill1 addCurveToPoint:CGPointMake(31.21, 7.82) controlPoint1:CGPointMake(27.89, 2.25) controlPoint2:CGPointMake(30.37, 4.69)];
    [fill1 addCurveToPoint:CGPointMake(18.76, 23.16) controlPoint1:CGPointMake(32.9, 14.1) controlPoint2:CGPointMake(27.43, 20.84)];
    [fill1 addCurveToPoint:CGPointMake(13.15, 23.92) controlPoint1:CGPointMake(16.88, 23.67) controlPoint2:CGPointMake(14.98, 23.92)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 34, 100.1);
    fill1.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill1 fill];
    CGContextRestoreGState(context);
    
    //! Fill 4
    UIBezierPath *fill4 = [UIBezierPath bezierPath];
    [fill4 moveToPoint:CGPointMake(18.33, 4.02)];
    [fill4 addCurveToPoint:CGPointMake(13.79, 4.63) controlPoint1:CGPointMake(16.87, 4.02) controlPoint2:CGPointMake(15.33, 4.22)];
    [fill4 addCurveToPoint:CGPointMake(4.17, 15.08) controlPoint1:CGPointMake(7.51, 6.32) controlPoint2:CGPointMake(3.1, 11.1)];
    [fill4 addCurveToPoint:CGPointMake(8.62, 19.21) controlPoint1:CGPointMake(4.66, 16.9) controlPoint2:CGPointMake(6.24, 18.37)];
    [fill4 addCurveToPoint:CGPointMake(17.73, 19.31) controlPoint1:CGPointMake(11.27, 20.14) controlPoint2:CGPointMake(14.5, 20.18)];
    [fill4 addCurveToPoint:CGPointMake(25.56, 14.67) controlPoint1:CGPointMake(20.95, 18.45) controlPoint2:CGPointMake(23.73, 16.8)];
    [fill4 addCurveToPoint:CGPointMake(27.35, 8.87) controlPoint1:CGPointMake(27.2, 12.75) controlPoint2:CGPointMake(27.84, 10.69)];
    [fill4 addCurveToPoint:CGPointMake(18.33, 4.02) controlPoint1:CGPointMake(26.55, 5.87) controlPoint2:CGPointMake(22.81, 4.02)];
    [fill4 moveToPoint:CGPointMake(13.15, 23.93)];
    [fill4 addCurveToPoint:CGPointMake(7.29, 22.98) controlPoint1:CGPointMake(11.08, 23.93) controlPoint2:CGPointMake(9.09, 23.61)];
    [fill4 addCurveToPoint:CGPointMake(0.3, 16.11) controlPoint1:CGPointMake(3.62, 21.69) controlPoint2:CGPointMake(1.14, 19.25)];
    [fill4 addCurveToPoint:CGPointMake(12.76, 0.77) controlPoint1:CGPointMake(-1.38, 9.83) controlPoint2:CGPointMake(4.09, 3.09)];
    [fill4 addCurveToPoint:CGPointMake(31.21, 7.83) controlPoint1:CGPointMake(21.42, -1.55) controlPoint2:CGPointMake(29.53, 1.55)];
    [fill4 addCurveToPoint:CGPointMake(28.6, 17.27) controlPoint1:CGPointMake(32.05, 10.97) controlPoint2:CGPointMake(31.12, 14.32)];
    [fill4 addCurveToPoint:CGPointMake(18.76, 23.18) controlPoint1:CGPointMake(26.25, 20.01) controlPoint2:CGPointMake(22.76, 22.11)];
    [fill4 addCurveToPoint:CGPointMake(13.15, 23.93) controlPoint1:CGPointMake(16.88, 23.68) controlPoint2:CGPointMake(14.98, 23.93)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 94, 92.09);
    fill4.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill4 fill];
    CGContextRestoreGState(context);
    
    //! Fill 7
    UIBezierPath *fill7 = [UIBezierPath bezierPath];
    [fill7 moveToPoint:CGPointMake(2, 74.04)];
    [fill7 addCurveToPoint:CGPointMake(0, 72.04) controlPoint1:CGPointMake(0.9, 74.04) controlPoint2:CGPointMake(0, 73.14)];
    [fill7 addLineToPoint:CGPointMake(0, 19.54)];
    [fill7 addCurveToPoint:CGPointMake(5.56, 10.57) controlPoint1:CGPointMake(0, 15.64) controlPoint2:CGPointMake(2.13, 12.21)];
    [fill7 addLineToPoint:CGPointMake(5.97, 10.32)];
    [fill7 addCurveToPoint:CGPointMake(6.13, 10.24) controlPoint1:CGPointMake(6.02, 10.29) controlPoint2:CGPointMake(6.08, 10.26)];
    [fill7 addCurveToPoint:CGPointMake(57.67, 0.24) controlPoint1:CGPointMake(22.14, 2.48) controlPoint2:CGPointMake(39.96, -0.97)];
    [fill7 addLineToPoint:CGPointMake(58.3, 0.24)];
    [fill7 addCurveToPoint:CGPointMake(58.49, 0.25) controlPoint1:CGPointMake(58.36, 0.24) controlPoint2:CGPointMake(58.43, 0.24)];
    [fill7 addCurveToPoint:CGPointMake(64, 6.24) controlPoint1:CGPointMake(61.63, 0.55) controlPoint2:CGPointMake(64, 3.12)];
    [fill7 addLineToPoint:CGPointMake(64, 64.04)];
    [fill7 addCurveToPoint:CGPointMake(62, 66.04) controlPoint1:CGPointMake(64, 65.14) controlPoint2:CGPointMake(63.11, 66.04)];
    [fill7 addCurveToPoint:CGPointMake(60, 64.04) controlPoint1:CGPointMake(60.9, 66.04) controlPoint2:CGPointMake(60, 65.14)];
    [fill7 addLineToPoint:CGPointMake(60, 6.24)];
    [fill7 addCurveToPoint:CGPointMake(58.19, 4.24) controlPoint1:CGPointMake(60, 5.2) controlPoint2:CGPointMake(59.24, 4.37)];
    [fill7 addLineToPoint:CGPointMake(57.6, 4.24)];
    [fill7 addCurveToPoint:CGPointMake(57.46, 4.23) controlPoint1:CGPointMake(57.55, 4.24) controlPoint2:CGPointMake(57.51, 4.23)];
    [fill7 addCurveToPoint:CGPointMake(7.95, 13.8) controlPoint1:CGPointMake(40.46, 3.06) controlPoint2:CGPointMake(23.34, 6.37)];
    [fill7 addLineToPoint:CGPointMake(7.53, 14.05)];
    [fill7 addCurveToPoint:CGPointMake(7.34, 14.15) controlPoint1:CGPointMake(7.47, 14.09) controlPoint2:CGPointMake(7.41, 14.12)];
    [fill7 addCurveToPoint:CGPointMake(4, 19.54) controlPoint1:CGPointMake(5.28, 15.11) controlPoint2:CGPointMake(4, 17.17)];
    [fill7 addLineToPoint:CGPointMake(4, 72.04)];
    [fill7 addCurveToPoint:CGPointMake(2, 74.04) controlPoint1:CGPointMake(4, 73.14) controlPoint2:CGPointMake(3.11, 74.04)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 61.5, 36);
    fill7.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill7 fill];
    CGContextRestoreGState(context);
    
    //! Fill 10
    UIBezierPath *fill10 = [UIBezierPath bezierPath];
    [fill10 moveToPoint:CGPointMake(2, 16.5)];
    [fill10 addCurveToPoint:CGPointMake(0.2, 15.37) controlPoint1:CGPointMake(1.26, 16.5) controlPoint2:CGPointMake(0.54, 16.08)];
    [fill10 addCurveToPoint:CGPointMake(1.14, 12.7) controlPoint1:CGPointMake(-0.28, 14.37) controlPoint2:CGPointMake(0.14, 13.18)];
    [fill10 addLineToPoint:CGPointMake(6.14, 10.3)];
    [fill10 addCurveToPoint:CGPointMake(57.73, 0.21) controlPoint1:CGPointMake(22.1, 2.57) controlPoint2:CGPointMake(39.93, -0.92)];
    [fill10 addLineToPoint:CGPointMake(62.14, 0.51)];
    [fill10 addCurveToPoint:CGPointMake(64, 2.64) controlPoint1:CGPointMake(63.24, 0.58) controlPoint2:CGPointMake(64.07, 1.54)];
    [fill10 addCurveToPoint:CGPointMake(61.87, 4.5) controlPoint1:CGPointMake(63.92, 3.74) controlPoint2:CGPointMake(62.96, 4.57)];
    [fill10 addLineToPoint:CGPointMake(57.47, 4.2)];
    [fill10 addCurveToPoint:CGPointMake(7.87, 13.9) controlPoint1:CGPointMake(40.37, 3.12) controlPoint2:CGPointMake(23.22, 6.47)];
    [fill10 addLineToPoint:CGPointMake(2.87, 16.31)];
    [fill10 addCurveToPoint:CGPointMake(2, 16.5) controlPoint1:CGPointMake(2.59, 16.44) controlPoint2:CGPointMake(2.29, 16.5)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 61.5, 55.93);
    fill10.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill10 fill];
    CGContextRestoreGState(context);
    
    //! Rectangle
    UIBezierPath *rectangle = [UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, 138, 138) cornerRadius:26];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 11, 11);
    CGContextSaveGState(context);
    rectangle.lineWidth = 10;
    CGContextBeginPath(context);
    CGContextAddPath(context, rectangle.CGPath);
    CGContextEOClip(context);
    [[LTLThemeManager sharedManager].themeColor setStroke];
    [rectangle stroke];
    CGContextRestoreGState(context);
    CGContextRestoreGState(context);
    
    CGContextRestoreGState(context);
}


#pragma mark - Canvas Images

//! Page 1

+(UIImage *) imageOfDownloadMusic
{
    static UIImage * image = nil;
    if (image != nil)
        return image;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(160, 160), NO, 0);
    [LTLDownloadMusic drawDownloadMusic];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}

+(UIImage *) imageOfDownloadMusicWithSize:(CGSize)size resizing:(LTLDownloadMusicResizingBehavior)resizing
{
    UIImage *image = nil;
    
    UIGraphicsBeginImageContextWithOptions(size, NO, 0);
    [LTLDownloadMusic drawDownloadMusicWithFrame:CGRectMake(0, 0, size.width, size.height) resizing:resizing];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}


#pragma mark - Resizing Behavior

CGRect LTLDownloadMusicResizingBehaviorApply(LTLDownloadMusicResizingBehavior behavior, CGRect rect, CGRect target)
{
    if (CGRectEqualToRect(rect, target) || CGRectEqualToRect(target, CGRectZero))
    {
        return rect;
    }
    
    CGSize scales = CGSizeZero;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);
    
    switch (behavior)
    {
        case LTLDownloadMusicResizingBehaviorAspectFit:
        {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLDownloadMusicResizingBehaviorAspectFill:
        {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLDownloadMusicResizingBehaviorStretch:
            break;
        
        case LTLDownloadMusicResizingBehaviorCenter:
        {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }
    
    CGRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}


@end
