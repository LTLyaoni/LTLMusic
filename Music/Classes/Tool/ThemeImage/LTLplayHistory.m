//
//  LTLplayHistory.m
//  音乐播放器
//
//  Created by 李泰良 on 16/12/16.
//  Copyright © 2016 LTL. All rights reserved.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

@import UIKit;
#import "LTLplayHistory.h"



@implementation LTLplayHistory


#pragma mark - Canvas Drawings

//! Page 1

+(void) drawPlayHistory
{
    [LTLplayHistory drawPlayHistoryWithFrame:CGRectMake(0, 0, 160, 160) resizing:LTLplayHistoryResizingBehaviorAspectFit];
}

+(void) drawPlayHistoryWithFrame:(CGRect)frame resizing:(LTLplayHistoryResizingBehavior)resizing
{
    //! General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //! Resize To Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = LTLplayHistoryResizingBehaviorApply(resizing, CGRectMake(0, 0, 160, 160), frame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGSize resizedScale = CGSizeMake(resizedFrame.size.width / 160, resizedFrame.size.height / 160);
    CGContextScaleCTM(context, resizedScale.width, resizedScale.height);
    
    //! Fill 1
    UIBezierPath *fill1 = [UIBezierPath bezierPath];
    [fill1 moveToPoint:CGPointMake(18.37, 4)];
    [fill1 addCurveToPoint:CGPointMake(13.79, 4.62) controlPoint1:CGPointMake(16.89, 4) controlPoint2:CGPointMake(15.34, 4.2)];
    [fill1 addCurveToPoint:CGPointMake(5.96, 9.27) controlPoint1:CGPointMake(10.56, 5.48) controlPoint2:CGPointMake(7.78, 7.13)];
    [fill1 addCurveToPoint:CGPointMake(4.16, 15.07) controlPoint1:CGPointMake(4.31, 11.18) controlPoint2:CGPointMake(3.68, 13.24)];
    [fill1 addCurveToPoint:CGPointMake(8.62, 19.19) controlPoint1:CGPointMake(4.65, 16.89) controlPoint2:CGPointMake(6.23, 18.35)];
    [fill1 addCurveToPoint:CGPointMake(17.72, 19.3) controlPoint1:CGPointMake(11.26, 20.13) controlPoint2:CGPointMake(14.5, 20.17)];
    [fill1 addCurveToPoint:CGPointMake(25.55, 14.65) controlPoint1:CGPointMake(20.95, 18.44) controlPoint2:CGPointMake(23.73, 16.79)];
    [fill1 addCurveToPoint:CGPointMake(27.35, 8.85) controlPoint1:CGPointMake(27.2, 12.73) controlPoint2:CGPointMake(27.83, 10.68)];
    [fill1 addCurveToPoint:CGPointMake(22.89, 4.73) controlPoint1:CGPointMake(26.86, 7.03) controlPoint2:CGPointMake(25.28, 5.57)];
    [fill1 addCurveToPoint:CGPointMake(18.37, 4) controlPoint1:CGPointMake(21.52, 4.24) controlPoint2:CGPointMake(19.98, 4)];
    [fill1 moveToPoint:CGPointMake(13.14, 23.92)];
    [fill1 addCurveToPoint:CGPointMake(7.28, 22.96) controlPoint1:CGPointMake(11.08, 23.92) controlPoint2:CGPointMake(9.09, 23.6)];
    [fill1 addCurveToPoint:CGPointMake(0.3, 16.1) controlPoint1:CGPointMake(3.62, 21.67) controlPoint2:CGPointMake(1.14, 19.23)];
    [fill1 addCurveToPoint:CGPointMake(2.92, 6.66) controlPoint1:CGPointMake(-0.54, 12.97) controlPoint2:CGPointMake(0.39, 9.62)];
    [fill1 addCurveToPoint:CGPointMake(12.75, 0.76) controlPoint1:CGPointMake(5.26, 3.93) controlPoint2:CGPointMake(8.76, 1.83)];
    [fill1 addCurveToPoint:CGPointMake(24.23, 0.96) controlPoint1:CGPointMake(16.75, -0.32) controlPoint2:CGPointMake(20.82, -0.25)];
    [fill1 addCurveToPoint:CGPointMake(31.21, 7.82) controlPoint1:CGPointMake(27.89, 2.25) controlPoint2:CGPointMake(30.37, 4.69)];
    [fill1 addCurveToPoint:CGPointMake(28.59, 17.26) controlPoint1:CGPointMake(32.05, 10.95) controlPoint2:CGPointMake(31.12, 14.3)];
    [fill1 addCurveToPoint:CGPointMake(18.76, 23.16) controlPoint1:CGPointMake(26.25, 19.99) controlPoint2:CGPointMake(22.76, 22.09)];
    [fill1 addCurveToPoint:CGPointMake(13.14, 23.92) controlPoint1:CGPointMake(16.88, 23.67) controlPoint2:CGPointMake(14.98, 23.92)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 62.6, 102.07);
    fill1.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill1 fill];
    CGContextRestoreGState(context);
    
    //! Group 5
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 90, 40.98);
        
        //! Clip 4
        UIBezierPath *clip4 = [UIBezierPath bezierPath];
        [clip4 moveToPoint:CGPointMake(43, 0)];
        [clip4 addLineToPoint:CGPointZero];
        [clip4 addLineToPoint:CGPointMake(0, 70)];
        [clip4 addLineToPoint:CGPointMake(43, 70)];
        [clip4 addLineToPoint:CGPointMake(43, 0)];
        [clip4 addLineToPoint:CGPointMake(43, 0)];
        [clip4 closePath];
        [clip4 moveToPoint:CGPointMake(43, 0)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 0.1, 0.02);
        CGContextRestoreGState(context);
        
        //! Clip 4 (Outline Mask)
        CGContextSaveGState(context);
        [clip4 applyTransform:CGAffineTransformMakeTranslation(0.1, 0.02)];
        [clip4 addClip];
        
        //! Fill 3
        UIBezierPath *fill3 = [UIBezierPath bezierPath];
        [fill3 moveToPoint:CGPointMake(2, 70)];
        [fill3 addCurveToPoint:CGPointMake(0, 68) controlPoint1:CGPointMake(0.9, 70) controlPoint2:CGPointMake(0, 69.11)];
        [fill3 addLineToPoint:CGPointMake(0, 2)];
        [fill3 addCurveToPoint:CGPointMake(0.8, 0.4) controlPoint1:CGPointMake(0, 1.37) controlPoint2:CGPointMake(0.3, 0.78)];
        [fill3 addCurveToPoint:CGPointMake(2.56, 0.08) controlPoint1:CGPointMake(1.31, 0.02) controlPoint2:CGPointMake(1.96, -0.1)];
        [fill3 addLineToPoint:CGPointMake(10.76, 2.48)];
        [fill3 addCurveToPoint:CGPointMake(32.52, 24.23) controlPoint1:CGPointMake(21.28, 5.59) controlPoint2:CGPointMake(29.41, 13.73)];
        [fill3 addLineToPoint:CGPointMake(32.9, 25.37)];
        [fill3 addCurveToPoint:CGPointMake(39.81, 36.29) controlPoint1:CGPointMake(34.12, 29.7) controlPoint2:CGPointMake(36.5, 33.44)];
        [fill3 addLineToPoint:CGPointMake(42.32, 38.5)];
        [fill3 addCurveToPoint:CGPointMake(42.5, 41.32) controlPoint1:CGPointMake(43.15, 39.23) controlPoint2:CGPointMake(43.23, 40.49)];
        [fill3 addCurveToPoint:CGPointMake(39.68, 41.5) controlPoint1:CGPointMake(41.77, 42.15) controlPoint2:CGPointMake(40.51, 42.23)];
        [fill3 addLineToPoint:CGPointMake(37.18, 39.3)];
        [fill3 addCurveToPoint:CGPointMake(29.08, 26.55) controlPoint1:CGPointMake(33.3, 35.96) controlPoint2:CGPointMake(30.49, 31.54)];
        [fill3 addLineToPoint:CGPointMake(28.7, 25.43)];
        [fill3 addCurveToPoint:CGPointMake(9.63, 6.32) controlPoint1:CGPointMake(25.96, 16.17) controlPoint2:CGPointMake(18.84, 9.04)];
        [fill3 addLineToPoint:CGPointMake(4, 4.67)];
        [fill3 addLineToPoint:CGPointMake(4, 68)];
        [fill3 addCurveToPoint:CGPointMake(2, 70) controlPoint1:CGPointMake(4, 69.11) controlPoint2:CGPointMake(3.11, 70)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 0.1, 0.02);
        fill3.usesEvenOddFillRule = YES;
        [[LTLThemeManager sharedManager].themeColor setFill];
        [fill3 fill];
        CGContextRestoreGState(context);
        
        CGContextRestoreGState(context);
        // End Clip 4 (Outline Mask)
        
        CGContextRestoreGState(context);
    }
    
    //! Fill 6
    UIBezierPath *fill6 = [UIBezierPath bezierPath];
    [fill6 moveToPoint:CGPointMake(41, 27)];
    [fill6 addLineToPoint:CGPointMake(36, 27)];
    [fill6 addCurveToPoint:CGPointMake(20.93, 17.94) controlPoint1:CGPointMake(29.67, 27) controlPoint2:CGPointMake(23.9, 23.53)];
    [fill6 addLineToPoint:CGPointMake(20.61, 17.29)];
    [fill6 addCurveToPoint:CGPointMake(8.41, 6.58) controlPoint1:CGPointMake(18.08, 12.42) controlPoint2:CGPointMake(13.63, 8.5)];
    [fill6 addLineToPoint:CGPointMake(1.29, 3.87)];
    [fill6 addCurveToPoint:CGPointMake(0.13, 1.29) controlPoint1:CGPointMake(0.26, 3.48) controlPoint2:CGPointMake(-0.26, 2.32)];
    [fill6 addCurveToPoint:CGPointMake(2.71, 0.13) controlPoint1:CGPointMake(0.52, 0.26) controlPoint2:CGPointMake(1.68, -0.26)];
    [fill6 addLineToPoint:CGPointMake(9.81, 2.83)];
    [fill6 addCurveToPoint:CGPointMake(24.18, 15.48) controlPoint1:CGPointMake(16.03, 5.12) controlPoint2:CGPointMake(21.14, 9.62)];
    [fill6 addLineToPoint:CGPointMake(24.49, 16.11)];
    [fill6 addCurveToPoint:CGPointMake(36, 23) controlPoint1:CGPointMake(26.74, 20.34) controlPoint2:CGPointMake(31.16, 23)];
    [fill6 addLineToPoint:CGPointMake(41, 23)];
    [fill6 addCurveToPoint:CGPointMake(43, 25) controlPoint1:CGPointMake(42.11, 23) controlPoint2:CGPointMake(43, 23.9)];
    [fill6 addCurveToPoint:CGPointMake(41, 27) controlPoint1:CGPointMake(43, 26.1) controlPoint2:CGPointMake(42.11, 27)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 90.1, 56);
    fill6.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill6 fill];
    CGContextRestoreGState(context);
    
    //! Fill 8
    UIBezierPath *fill8 = [UIBezierPath bezierPath];
    [fill8 moveToPoint:CGPointMake(39.1, 4)];
    [fill8 addLineToPoint:CGPointMake(2, 4)];
    [fill8 addCurveToPoint:CGPointMake(0, 2) controlPoint1:CGPointMake(0.9, 4) controlPoint2:CGPointMake(0, 3.1)];
    [fill8 addCurveToPoint:CGPointMake(2, 0) controlPoint1:CGPointMake(0, 0.9) controlPoint2:CGPointMake(0.9, 0)];
    [fill8 addLineToPoint:CGPointMake(39.1, 0)];
    [fill8 addCurveToPoint:CGPointMake(41.1, 2) controlPoint1:CGPointMake(40.2, 0) controlPoint2:CGPointMake(41.1, 0.9)];
    [fill8 addCurveToPoint:CGPointMake(39.1, 4) controlPoint1:CGPointMake(41.1, 3.1) controlPoint2:CGPointMake(40.2, 4)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 39.1, 50);
    fill8.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill8 fill];
    CGContextRestoreGState(context);
    
    //! Fill 10
    UIBezierPath *fill10 = [UIBezierPath bezierPath];
    [fill10 moveToPoint:CGPointMake(5, 4)];
    [fill10 addLineToPoint:CGPointMake(2, 4)];
    [fill10 addCurveToPoint:CGPointMake(0, 2) controlPoint1:CGPointMake(0.9, 4) controlPoint2:CGPointMake(0, 3.1)];
    [fill10 addCurveToPoint:CGPointMake(2, 0) controlPoint1:CGPointMake(0, 0.9) controlPoint2:CGPointMake(0.9, 0)];
    [fill10 addLineToPoint:CGPointMake(5, 0)];
    [fill10 addCurveToPoint:CGPointMake(7, 2) controlPoint1:CGPointMake(6.1, 0) controlPoint2:CGPointMake(7, 0.9)];
    [fill10 addCurveToPoint:CGPointMake(5, 4) controlPoint1:CGPointMake(7, 3.1) controlPoint2:CGPointMake(6.1, 4)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 29, 50);
    fill10.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill10 fill];
    CGContextRestoreGState(context);
    
    //! Fill 12
    UIBezierPath *fill12 = [UIBezierPath bezierPath];
    [fill12 moveToPoint:CGPointMake(34.1, 4)];
    [fill12 addLineToPoint:CGPointMake(2, 4)];
    [fill12 addCurveToPoint:CGPointMake(0, 2) controlPoint1:CGPointMake(0.9, 4) controlPoint2:CGPointMake(0, 3.1)];
    [fill12 addCurveToPoint:CGPointMake(2, 0) controlPoint1:CGPointMake(0, 0.9) controlPoint2:CGPointMake(0.9, 0)];
    [fill12 addLineToPoint:CGPointMake(34.1, 0)];
    [fill12 addCurveToPoint:CGPointMake(36.1, 2) controlPoint1:CGPointMake(35.2, 0) controlPoint2:CGPointMake(36.1, 0.9)];
    [fill12 addCurveToPoint:CGPointMake(34.1, 4) controlPoint1:CGPointMake(36.1, 3.1) controlPoint2:CGPointMake(35.2, 4)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 39.1, 62);
    fill12.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill12 fill];
    CGContextRestoreGState(context);
    
    //! Fill 14
    UIBezierPath *fill14 = [UIBezierPath bezierPath];
    [fill14 moveToPoint:CGPointMake(5, 4)];
    [fill14 addLineToPoint:CGPointMake(2, 4)];
    [fill14 addCurveToPoint:CGPointMake(0, 2) controlPoint1:CGPointMake(0.9, 4) controlPoint2:CGPointMake(0, 3.1)];
    [fill14 addCurveToPoint:CGPointMake(2, 0) controlPoint1:CGPointMake(0, 0.9) controlPoint2:CGPointMake(0.9, 0)];
    [fill14 addLineToPoint:CGPointMake(5, 0)];
    [fill14 addCurveToPoint:CGPointMake(7, 2) controlPoint1:CGPointMake(6.1, 0) controlPoint2:CGPointMake(7, 0.9)];
    [fill14 addCurveToPoint:CGPointMake(5, 4) controlPoint1:CGPointMake(7, 3.1) controlPoint2:CGPointMake(6.1, 4)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 29, 62);
    fill14.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill14 fill];
    CGContextRestoreGState(context);
    
    //! Fill 16
    UIBezierPath *fill16 = [UIBezierPath bezierPath];
    [fill16 moveToPoint:CGPointMake(42.1, 4)];
    [fill16 addLineToPoint:CGPointMake(2, 4)];
    [fill16 addCurveToPoint:CGPointMake(0, 2) controlPoint1:CGPointMake(0.9, 4) controlPoint2:CGPointMake(0, 3.1)];
    [fill16 addCurveToPoint:CGPointMake(2, 0) controlPoint1:CGPointMake(0, 0.9) controlPoint2:CGPointMake(0.9, 0)];
    [fill16 addLineToPoint:CGPointMake(42.1, 0)];
    [fill16 addCurveToPoint:CGPointMake(44.1, 2) controlPoint1:CGPointMake(43.21, 0) controlPoint2:CGPointMake(44.1, 0.9)];
    [fill16 addCurveToPoint:CGPointMake(42.1, 4) controlPoint1:CGPointMake(44.1, 3.1) controlPoint2:CGPointMake(43.21, 4)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 39.1, 74);
    fill16.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill16 fill];
    CGContextRestoreGState(context);
    
    //! Fill 18
    UIBezierPath *fill18 = [UIBezierPath bezierPath];
    [fill18 moveToPoint:CGPointMake(5, 4)];
    [fill18 addLineToPoint:CGPointMake(2, 4)];
    [fill18 addCurveToPoint:CGPointMake(0, 2) controlPoint1:CGPointMake(0.9, 4) controlPoint2:CGPointMake(0, 3.1)];
    [fill18 addCurveToPoint:CGPointMake(2, 0) controlPoint1:CGPointMake(0, 0.9) controlPoint2:CGPointMake(0.9, 0)];
    [fill18 addLineToPoint:CGPointMake(5, 0)];
    [fill18 addCurveToPoint:CGPointMake(7, 2) controlPoint1:CGPointMake(6.1, 0) controlPoint2:CGPointMake(7, 0.9)];
    [fill18 addCurveToPoint:CGPointMake(5, 4) controlPoint1:CGPointMake(7, 3.1) controlPoint2:CGPointMake(6.1, 4)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 29, 74);
    fill18.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill18 fill];
    CGContextRestoreGState(context);
    
    //! Fill 20
    UIBezierPath *fill20 = [UIBezierPath bezierPath];
    [fill20 moveToPoint:CGPointMake(29.1, 4)];
    [fill20 addLineToPoint:CGPointMake(2, 4)];
    [fill20 addCurveToPoint:CGPointMake(0, 2) controlPoint1:CGPointMake(0.9, 4) controlPoint2:CGPointMake(0, 3.1)];
    [fill20 addCurveToPoint:CGPointMake(2, 0) controlPoint1:CGPointMake(0, 0.9) controlPoint2:CGPointMake(0.9, 0)];
    [fill20 addLineToPoint:CGPointMake(29.1, 0)];
    [fill20 addCurveToPoint:CGPointMake(31.1, 2) controlPoint1:CGPointMake(30.2, 0) controlPoint2:CGPointMake(31.1, 0.9)];
    [fill20 addCurveToPoint:CGPointMake(29.1, 4) controlPoint1:CGPointMake(31.1, 3.1) controlPoint2:CGPointMake(30.2, 4)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 39.1, 86);
    fill20.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill20 fill];
    CGContextRestoreGState(context);
    
    //! Fill 22
    UIBezierPath *fill22 = [UIBezierPath bezierPath];
    [fill22 moveToPoint:CGPointMake(5, 4)];
    [fill22 addLineToPoint:CGPointMake(2, 4)];
    [fill22 addCurveToPoint:CGPointMake(0, 2) controlPoint1:CGPointMake(0.9, 4) controlPoint2:CGPointMake(0, 3.1)];
    [fill22 addCurveToPoint:CGPointMake(2, 0) controlPoint1:CGPointMake(0, 0.9) controlPoint2:CGPointMake(0.9, 0)];
    [fill22 addLineToPoint:CGPointMake(5, 0)];
    [fill22 addCurveToPoint:CGPointMake(7, 2) controlPoint1:CGPointMake(6.1, 0) controlPoint2:CGPointMake(7, 0.9)];
    [fill22 addCurveToPoint:CGPointMake(5, 4) controlPoint1:CGPointMake(7, 3.1) controlPoint2:CGPointMake(6.1, 4)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 29, 86);
    fill22.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill22 fill];
    CGContextRestoreGState(context);
    
    //! Rectangle
    UIBezierPath *rectangle = [UIBezierPath bezierPathWithRoundedRect:CGRectMake(0, 0, 138, 138) cornerRadius:26];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 11, 11);
    CGContextSaveGState(context);
    rectangle.lineWidth = 10;
    CGContextBeginPath(context);
    CGContextAddPath(context, rectangle.CGPath);
    CGContextEOClip(context);
    [[LTLThemeManager sharedManager].themeColor setStroke];
    [rectangle stroke];
    CGContextRestoreGState(context);
    CGContextRestoreGState(context);
    
    CGContextRestoreGState(context);
}


#pragma mark - Canvas Images

//! Page 1

+(UIImage *) imageOfPlayHistory
{
    static UIImage * image = nil;
    if (image != nil)
        return image;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(160, 160), NO, 0);
    [LTLplayHistory drawPlayHistory];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}

+(UIImage *) imageOfPlayHistoryWithSize:(CGSize)size resizing:(LTLplayHistoryResizingBehavior)resizing
{
    UIImage *image = nil;
    
    UIGraphicsBeginImageContextWithOptions(size, NO, 0);
    [LTLplayHistory drawPlayHistoryWithFrame:CGRectMake(0, 0, size.width, size.height) resizing:resizing];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}


#pragma mark - Resizing Behavior

CGRect LTLplayHistoryResizingBehaviorApply(LTLplayHistoryResizingBehavior behavior, CGRect rect, CGRect target)
{
    if (CGRectEqualToRect(rect, target) || CGRectEqualToRect(target, CGRectZero))
    {
        return rect;
    }
    
    CGSize scales = CGSizeZero;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);
    
    switch (behavior)
    {
        case LTLplayHistoryResizingBehaviorAspectFit:
        {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLplayHistoryResizingBehaviorAspectFill:
        {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLplayHistoryResizingBehaviorStretch:
            break;
        
        case LTLplayHistoryResizingBehaviorCenter:
        {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }
    
    CGRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}


@end
