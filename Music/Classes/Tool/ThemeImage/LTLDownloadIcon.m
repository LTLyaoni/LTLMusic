//
//  LTLDownloadIcon.m
//  音乐播放器
//
//  Created by 李泰良 on 16/12/13.
//  Copyright © 2016 LTL. All rights reserved.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

@import UIKit;
#import "LTLDownloadIcon.h"



@implementation LTLDownloadIcon


#pragma mark - Canvas Drawings

//! Page 1

+(void) drawDownload
{
    [LTLDownloadIcon drawDownloadWithFrame:CGRectMake(0, 0, 32, 31) resizing:LTLDownloadIconResizingBehaviorAspectFit];
}

+(void) drawDownloadWithFrame:(CGRect)frame resizing:(LTLDownloadIconResizingBehavior)resizing
{
    //! General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //! Resize To Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = LTLDownloadIconResizingBehaviorApply(resizing, CGRectMake(0, 0, 32, 31), frame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGSize resizedScale = CGSizeMake(resizedFrame.size.width / 32, resizedFrame.size.height / 31);
    CGContextScaleCTM(context, resizedScale.width, resizedScale.height);
    
    //! download
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 6, 5);
        
        //! Fill 1
        UIBezierPath *fill1 = [UIBezierPath bezierPath];
        [fill1 moveToPoint:CGPointMake(3.71, 0)];
        [fill1 addLineToPoint:CGPointMake(3.71, 8.59)];
        [fill1 addLineToPoint:CGPointMake(1.41, 6.29)];
        [fill1 addLineToPoint:CGPointMake(0, 7.71)];
        [fill1 addLineToPoint:CGPointMake(4.71, 12.42)];
        [fill1 addLineToPoint:CGPointMake(9.41, 7.71)];
        [fill1 addLineToPoint:CGPointMake(8, 6.29)];
        [fill1 addLineToPoint:CGPointMake(5.71, 8.59)];
        [fill1 addLineToPoint:CGPointMake(5.71, 0)];
        [fill1 addLineToPoint:CGPointMake(3.71, 0)];
        [fill1 closePath];
        [fill1 moveToPoint:CGPointMake(3.71, 0)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 5.29, 0);
        fill1.usesEvenOddFillRule = YES;
        [[LTLThemeManager sharedManager].themeColor setFill];
        [fill1 fill];
        CGContextRestoreGState(context);
        
        //! Fill 2
        UIBezierPath *fill2 = [UIBezierPath bezierPath];
        [fill2 moveToPoint:CGPointMake(13.58, 0)];
        [fill2 addLineToPoint:CGPointMake(11.58, 2)];
        [fill2 addLineToPoint:CGPointMake(8.41, 2)];
        [fill2 addLineToPoint:CGPointMake(6.41, 0)];
        [fill2 addLineToPoint:CGPointZero];
        [fill2 addLineToPoint:CGPointMake(0, 8)];
        [fill2 addLineToPoint:CGPointMake(20, 8)];
        [fill2 addLineToPoint:CGPointMake(20, 0)];
        [fill2 addLineToPoint:CGPointMake(13.58, 0)];
        [fill2 closePath];
        [fill2 moveToPoint:CGPointMake(12.41, 4)];
        [fill2 addLineToPoint:CGPointMake(14.41, 2)];
        [fill2 addLineToPoint:CGPointMake(18, 2)];
        [fill2 addLineToPoint:CGPointMake(18, 6)];
        [fill2 addLineToPoint:CGPointMake(2, 6)];
        [fill2 addLineToPoint:CGPointMake(2, 2)];
        [fill2 addLineToPoint:CGPointMake(5.59, 2)];
        [fill2 addLineToPoint:CGPointMake(7.59, 4)];
        [fill2 addLineToPoint:CGPointMake(12.41, 4)];
        [fill2 closePath];
        [fill2 moveToPoint:CGPointMake(12.41, 4)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 0, 13);
        fill2.usesEvenOddFillRule = YES;
        [[LTLThemeManager sharedManager].themeColor setFill];
        [fill2 fill];
        CGContextRestoreGState(context);
        
        CGContextRestoreGState(context);
    }
    
    CGContextRestoreGState(context);
}


#pragma mark - Canvas Images

//! Page 1

+(UIImage *) imageOfDownload
{
    static UIImage * image = nil;
    if (image != nil)
        return image;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(32, 31), NO, 0);
    [LTLDownloadIcon drawDownload];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}

+(UIImage *) imageOfDownloadWithSize:(CGSize)size resizing:(LTLDownloadIconResizingBehavior)resizing
{
    UIImage *image = nil;
    
    UIGraphicsBeginImageContextWithOptions(size, NO, 0);
    [LTLDownloadIcon drawDownloadWithFrame:CGRectMake(0, 0, size.width, size.height) resizing:resizing];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}


#pragma mark - Resizing Behavior

CGRect LTLDownloadIconResizingBehaviorApply(LTLDownloadIconResizingBehavior behavior, CGRect rect, CGRect target)
{
    if (CGRectEqualToRect(rect, target) || CGRectEqualToRect(target, CGRectZero))
    {
        return rect;
    }
    
    CGSize scales = CGSizeZero;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);
    
    switch (behavior)
    {
        case LTLDownloadIconResizingBehaviorAspectFit:
        {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLDownloadIconResizingBehaviorAspectFill:
        {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLDownloadIconResizingBehaviorStretch:
            break;
        
        case LTLDownloadIconResizingBehaviorCenter:
        {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }
    
    CGRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}


@end
