//
//  LTLAlbumReflashIcon.m
//  音乐播放器
//
//  Created by 李泰良 on 16/12/13.
//  Copyright © 2016 LTL. All rights reserved.
//
//  Generated by PaintCode Plugin for Sketch
//

@import UIKit;
#import "LTLAlbumReflashIcon.h"



@implementation LTLAlbumReflashIcon


#pragma mark - Canvas Drawings

//! Page 1

+(void) drawArtboard
{
    [LTLAlbumReflashIcon drawArtboardWithFrame:CGRectMake(0, 0, 180, 180) resizing:LTLAlbumReflashIconResizingBehaviorAspectFit];
}

+(void) drawArtboardWithFrame:(CGRect)frame resizing:(LTLAlbumReflashIconResizingBehavior)resizing
{
    //! General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //! Resize To Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = LTLAlbumReflashIconResizingBehaviorApply(resizing, CGRectMake(0, 0, 180, 180), frame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGSize resizedScale = CGSizeMake(resizedFrame.size.width / 180, resizedFrame.size.height / 180);
    CGContextScaleCTM(context, resizedScale.width, resizedScale.height);
    
    //! Fill 1
    UIBezierPath *fill1 = [UIBezierPath bezierPath];
    [fill1 moveToPoint:CGPointMake(3.49, 57.05)];
    [fill1 addCurveToPoint:CGPointMake(0.15, 82.54) controlPoint1:CGPointMake(0.67, 65.33) controlPoint2:CGPointMake(-0.43, 74.05)];
    [fill1 addCurveToPoint:CGPointMake(6.67, 58.37) controlPoint1:CGPointMake(0.72, 74.05) controlPoint2:CGPointMake(2.96, 65.78)];
    [fill1 addCurveToPoint:CGPointMake(21.61, 39.1) controlPoint1:CGPointMake(10.37, 50.95) controlPoint2:CGPointMake(15.51, 44.38)];
    [fill1 addCurveToPoint:CGPointMake(42.23, 27.36) controlPoint1:CGPointMake(27.71, 33.81) controlPoint2:CGPointMake(34.78, 29.82)];
    [fill1 addCurveToPoint:CGPointMake(65.11, 24.55) controlPoint1:CGPointMake(49.67, 24.89) controlPoint2:CGPointMake(57.49, 23.97)];
    [fill1 addLineToPoint:CGPointMake(65.11, 35.33)];
    [fill1 addLineToPoint:CGPointMake(95.75, 17.66)];
    [fill1 addLineToPoint:CGPointMake(65.11, 0)];
    [fill1 addLineToPoint:CGPointMake(65.11, 10.78)];
    [fill1 addCurveToPoint:CGPointMake(38.27, 17.82) controlPoint1:CGPointMake(55.72, 11.35) controlPoint2:CGPointMake(46.53, 13.77)];
    [fill1 addCurveToPoint:CGPointMake(16.74, 34.24) controlPoint1:CGPointMake(30, 21.86) controlPoint2:CGPointMake(22.66, 27.51)];
    [fill1 addCurveToPoint:CGPointMake(3.49, 57.05) controlPoint1:CGPointMake(10.81, 40.96) controlPoint2:CGPointMake(6.3, 48.77)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 24.47, 12.17);
    fill1.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill1 fill];
    fill1.lineWidth = 2;
    [[LTLThemeManager sharedManager].themeColor setStroke];
    [fill1 stroke];
    CGContextRestoreGState(context);
    
    //! Fill 4
    UIBezierPath *fill4 = [UIBezierPath bezierPath];
    [fill4 moveToPoint:CGPointMake(37.06, 65.33)];
    [fill4 addCurveToPoint:CGPointMake(33.59, 38.51) controlPoint1:CGPointMake(37.69, 56.16) controlPoint2:CGPointMake(36.46, 46.99)];
    [fill4 addCurveToPoint:CGPointMake(20.43, 15.63) controlPoint1:CGPointMake(30.72, 30.01) controlPoint2:CGPointMake(26.21, 22.2)];
    [fill4 addCurveToPoint:CGPointZero controlPoint1:CGPointMake(14.67, 9.05) controlPoint2:CGPointMake(7.65, 3.74)];
    [fill4 addCurveToPoint:CGPointMake(17.7, 17.73) controlPoint1:CGPointMake(7.08, 4.74) controlPoint2:CGPointMake(13.12, 10.81)];
    [fill4 addCurveToPoint:CGPointMake(26.94, 40.28) controlPoint1:CGPointMake(22.28, 24.64) controlPoint2:CGPointMake(25.41, 32.36)];
    [fill4 addCurveToPoint:CGPointMake(26.81, 63.99) controlPoint1:CGPointMake(28.47, 48.2) controlPoint2:CGPointMake(28.4, 56.31)];
    [fill4 addCurveToPoint:CGPointMake(17.81, 85.18) controlPoint1:CGPointMake(25.23, 71.66) controlPoint2:CGPointMake(22.12, 78.88)];
    [fill4 addLineToPoint:CGPointMake(8.46, 79.79)];
    [fill4 addLineToPoint:CGPointMake(8.46, 115.12)];
    [fill4 addLineToPoint:CGPointMake(39.09, 97.45)];
    [fill4 addLineToPoint:CGPointMake(29.74, 92.06)];
    [fill4 addCurveToPoint:CGPointMake(37.06, 65.33) controlPoint1:CGPointMake(33.94, 83.66) controlPoint2:CGPointMake(36.44, 74.5)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 122.06, 38.53);
    fill4.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill4 fill];
    fill4.lineWidth = 2;
    [[LTLThemeManager sharedManager].themeColor setStroke];
    [fill4 stroke];
    CGContextRestoreGState(context);
    
    //! Fill 6
    UIBezierPath *fill6 = [UIBezierPath bezierPath];
    [fill6 moveToPoint:CGPointMake(55.65, 53.4)];
    [fill6 addCurveToPoint:CGPointMake(35.17, 41.45) controlPoint1:CGPointMake(48.02, 50.77) controlPoint2:CGPointMake(41.02, 46.66)];
    [fill6 addCurveToPoint:CGPointMake(21.29, 23.06) controlPoint1:CGPointMake(29.3, 36.24) controlPoint2:CGPointMake(24.59, 29.94)];
    [fill6 addLineToPoint:CGPointMake(30.64, 17.67)];
    [fill6 addLineToPoint:CGPointZero];
    [fill6 addLineToPoint:CGPointMake(0, 35.33)];
    [fill6 addLineToPoint:CGPointMake(9.35, 29.94)];
    [fill6 addCurveToPoint:CGPointMake(28.88, 49.64) controlPoint1:CGPointMake(14.54, 37.78) controlPoint2:CGPointMake(21.23, 44.52)];
    [fill6 addCurveToPoint:CGPointMake(53.87, 60.05) controlPoint1:CGPointMake(36.51, 54.77) controlPoint2:CGPointMake(45.08, 58.3)];
    [fill6 addCurveToPoint:CGPointMake(80.28, 60.11) controlPoint1:CGPointMake(62.67, 61.81) controlPoint2:CGPointMake(71.7, 61.81)];
    [fill6 addCurveToPoint:CGPointMake(104.05, 50.25) controlPoint1:CGPointMake(88.87, 58.41) controlPoint2:CGPointMake(96.98, 54.99)];
    [fill6 addCurveToPoint:CGPointMake(79.83, 56.69) controlPoint1:CGPointMake(96.4, 54) controlPoint2:CGPointMake(88.12, 56.19)];
    [fill6 addCurveToPoint:CGPointMake(55.65, 53.4) controlPoint1:CGPointMake(71.55, 57.2) controlPoint2:CGPointMake(63.29, 56.04)];
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 18, 100.65);
    fill6.usesEvenOddFillRule = YES;
    [[LTLThemeManager sharedManager].themeColor setFill];
    [fill6 fill];
    fill6.lineWidth = 2;
    [[LTLThemeManager sharedManager].themeColor setStroke];
    [fill6 stroke];
    CGContextRestoreGState(context);
    
    CGContextRestoreGState(context);
}


#pragma mark - Canvas Images

//! Page 1

+(UIImage *) imageOfArtboard
{
    static UIImage * image = nil;
    if (image != nil)
        return image;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(180, 180), NO, 0);
    [LTLAlbumReflashIcon drawArtboard];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}

+(UIImage *) imageOfArtboardWithSize:(CGSize)size resizing:(LTLAlbumReflashIconResizingBehavior)resizing
{
    UIImage *image = nil;
    
    UIGraphicsBeginImageContextWithOptions(size, NO, 0);
    [LTLAlbumReflashIcon drawArtboardWithFrame:CGRectMake(0, 0, size.width, size.height) resizing:resizing];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}


#pragma mark - Resizing Behavior

CGRect LTLAlbumReflashIconResizingBehaviorApply(LTLAlbumReflashIconResizingBehavior behavior, CGRect rect, CGRect target)
{
    if (CGRectEqualToRect(rect, target) || CGRectEqualToRect(target, CGRectZero))
    {
        return rect;
    }
    
    CGSize scales = CGSizeZero;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);
    
    switch (behavior)
    {
        case LTLAlbumReflashIconResizingBehaviorAspectFit:
        {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLAlbumReflashIconResizingBehaviorAspectFill:
        {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case LTLAlbumReflashIconResizingBehaviorStretch:
            break;
        
        case LTLAlbumReflashIconResizingBehaviorCenter:
        {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }
    
    CGRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}


@end
